# Teste de Performance 1: Fundamentos de Python

## üìñ Descri√ß√£o Geral

Este reposit√≥rio cont√©m a resolu√ß√£o para o Teste de Performance (TP1), um trabalho acad√™mico focado nos conceitos fundamentais da linguagem Python. O projeto √© composto por 12 exerc√≠cios pr√°ticos, desenhados para aplicar e validar o conhecimento em diferentes cen√°rios de manipula√ß√£o de dados.

Os exerc√≠cios abordam os seguintes t√≥picos principais:
-   Declara√ß√£o e uso de **vari√°veis**.
-   Aplica√ß√£o de **tipos de dados primitivos** (`string`, `int`, `float`, `boolean`).
-   Realiza√ß√£o de **opera√ß√µes aritm√©ticas** em um contexto pr√°tico.
-   **Convers√£o de tipos** de dados (type casting).
-   **Manipula√ß√£o de strings**: formata√ß√£o, concatena√ß√£o, repeti√ß√£o, e uso de m√©todos como `.upper()`, `.lower()`, `.title()`, etc.
-   Uso de operadores l√≥gicos como `in` para verifica√ß√£o de conte√∫do.

---

## üìù Exerc√≠cios Realizados

Abaixo est√° a lista dos 12 exerc√≠cios contidos neste trabalho, com seus respectivos objetivos.

### 1. Cadastro de Estagi√°rio com Vari√°veis Simples
-   **Objetivo:** Declarar e armazenar dados fixos de um estagi√°rio usando vari√°veis para simular um registro em sistema cont√°bil.

### 2. Simula√ß√£o de Cliente com Tipos de Dados Primitivos
-   **Objetivo:** Criar vari√°veis com diferentes tipos primitivos (`string`, `int`, `float`, `boolean`) para simular o registro de um cliente e imprimir seus valores e tipos.

### 3. Opera√ß√µes Aritm√©ticas em Contexto Log√≠stico
-   **Objetivo:** Calcular e imprimir os resultados de diferentes opera√ß√µes aritm√©ticas a partir de vari√°veis fixas que simulam consumo e deslocamento log√≠stico.

### 4. Convers√£o entre Minutos e Horas
-   **Objetivo:** Converter um valor fixo em minutos para horas e vice-versa, usando vari√°veis fixas em um notebook.

### 5. Manipula√ß√£o de Strings com Aspas e Quebras de Linha
-   **Objetivo:** Definir tr√™s strings com aspas simples, duplas e triplas para garantir a formata√ß√£o correta em relat√≥rios automatizados.

### 6. Concatena√ß√£o de Strings para Mensagem de Boas-Vindas
-   **Objetivo:** Concatenar m√∫ltiplas strings com o operador `+` para compor mensagens estruturadas utilizadas em comunica√ß√£o interna.

### 7. Repeti√ß√£o de Strings para Alerta Visual
-   **Objetivo:** Utilizar o operador `*` para repetir uma string com fins de destaque visual ou formata√ß√£o.

### 8. Transforma√ß√µes de Capitaliza√ß√£o em Strings
-   **Objetivo:** Aplicar fun√ß√µes de capitaliza√ß√£o e transforma√ß√£o de strings (`upper`, `lower`, `title`, etc.) para padronizar informa√ß√µes textuais.

### 9. Verifica√ß√£o de Palavras-Chave com Operador `in`
-   **Objetivo:** Testar a ocorr√™ncia de uma substring dentro de uma string maior utilizando o operador `in`.

### 10. Contagem de Caracteres e Palavras em Texto
-   **Objetivo:** Contar o n√∫mero de caracteres e palavras em uma string textual utilizando `len()` e `count()`.

### 11. Convers√£o de String para Inteiro com Opera√ß√£o Matem√°tica
-   **Objetivo:** Converter dados entre `string` e `int`, e realizar opera√ß√µes matem√°ticas b√°sicas com o resultado.

### 12. C√°lculo de Desconto com Convers√£o de String
-   **Objetivo:** Converter uma `string` em um n√∫mero decimal, calcular um desconto percentual e aplic√°-lo sobre um valor fixo.

---

## üõ†Ô∏è Tecnologias Utilizadas

-   **Linguagem:** Python 3 

---

## üöÄ Como Executar

Os exerc√≠cios foram resolvidos em um √∫nico arquivo de notebook, conforme solicitado no enunciado.

1.  **Clone o reposit√≥rio** (se aplic√°vel):
    ```bash
    git clone [https://github.com/WeslleySoaresm/Programacao_Python_DR2_TP1_25E3_2.git]
    ```
2.  **Pr√©-requisitos:** Certifique-se de ter um ambiente com Python e Jupyter (ou uma IDE compat√≠vel como VS Code com a extens√£o Python) instalado.
3.  **Abra o Notebook:** Navegue at√© o diret√≥rio e abra o arquivo `nome_sobrenome_DR2_TP1.ipynb`.
4.  **Execute as C√©lulas:** Execute as c√©lulas de c√≥digo sequencialmente para ver os resultados de cada exerc√≠cio.

---
